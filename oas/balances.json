{
    "openapi": "3.0.2",
    "info": {
        "title": "Balances",
        "version": "1.0.0",
        "description": "Represents the summary of financial movements, grouped by accounts and categories"
    },
    "servers": [
        {
            "url": "https://api.financial.com",
            "description": "Financial - Production environment"
        },
        {
            "url": "https://sandbox.financial.com",
            "description": "Financial - Sandbox environment"
        }
    ],
    "paths": {
        "/v1/balances": {
            "summary": "Collection of balances",
            "description": "An API resource that represents a collection of balances",
            "get": {
                "parameters": [
                    {
                        "name": "_limit",
                        "description": "Set the number of records to be returned",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "name": "_offset",
                        "description": "Position of the reference record, from which the next N records will be returned",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "_sort",
                        "description": "Provides the possibility to sort the values of the list, in ascending and descending directions",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "name": "period_id",
                        "description": "Period unique identifier",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Response-200-Ok-Balance-List"
                    }
                },
                "operationId": "get-balance-list",
                "summary": "List of balances",
                "description": "List of balances"
            },
            "post": {
                "requestBody": {
                    "description": "Request Body of a balance creation operation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BalanceRequest"
                            },
                            "examples": {
                                "Balance-Creation-Body-Example": {
                                    "value": {
                                        "period_id": "f81b0091-1c8c-4fbe-b76b-99ca4392950a",
                                        "category_id": "6c92f45a-18f4-43ab-9d97-967be5634ac0",
                                        "actual_amount": 150.35,
                                        "limit_amount": 300
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "examples": {
                            "Content-Type-Header-Example": {
                                "value": "application/json"
                            }
                        },
                        "name": "Content-Type-Header",
                        "description": "Defines the format of the request body",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/Response-201-Created"
                    }
                },
                "operationId": "create-balance-list",
                "summary": "Balance creation",
                "description": "Operation that creates a new balance"
            }
        },
        "/v1/balances/{id}": {
            "summary": "Balance item",
            "description": "Path that points to a specific balance in the collection",
            "get": {
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Response-200-Ok-Balance"
                    }
                },
                "operationId": "get-balance",
                "summary": "Get a balance item",
                "description": "Operation that gets a specific balance"
            },
            "put": {
                "requestBody": {
                    "description": "Update balance request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BalanceRequest"
                            },
                            "examples": {
                                "Update-Balance-Example": {
                                    "value": {
                                        "period_id": "f81b0091-1c8c-4fbe-b76b-99ca4392950a",
                                        "category_id": "6c92f45a-18f4-43ab-9d97-967be5634ac0",
                                        "actual_amount": 150.35,
                                        "limit_amount": 300
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "examples": {
                            "Content-Type-Header-Example": {
                                "value": "application/json"
                            }
                        },
                        "name": "Content-Type-Header",
                        "description": "Defines the format of the request body",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Response-200-Ok-Balance"
                    }
                },
                "operationId": "update-balance",
                "summary": "Balance update",
                "description": "Operation that updates a balance"
            },
            "delete": {
                "responses": {
                    "204": {
                        "description": "Empty response body"
                    }
                },
                "operationId": "delete-balance",
                "summary": "Balance exclusion",
                "description": "Operation that removes a balance"
            },
            "patch": {
                "requestBody": {
                    "description": "Patch update request body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BalanceRequestPatch"
                            },
                            "examples": {
                                "Patch-Update-Balance-Example": {
                                    "value": {
                                        "actual_amount": 150.35
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "examples": {
                            "Content-Type-Header-Example": {
                                "value": "application/json"
                            }
                        },
                        "name": "Content-Type-Header",
                        "description": "Defines the format of the request body",
                        "schema": {
                            "type": "string"
                        },
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/Response-200-Ok-Balance"
                    }
                },
                "operationId": "patch-balance",
                "summary": "Balance partial update",
                "description": "Operation that updates a balance"
            },
            "parameters": [
                {
                    "examples": {
                        "Path-Parameter-Id-Example": {
                            "value": "465d6122-b9b1-4d07-9eb9-502177d6e3b2"
                        }
                    },
                    "name": "id",
                    "description": "Balance unique identifier",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "ErrorMessage": {
                "title": "Root Type for ErrorMessage",
                "description": "Represents an error message for HTTP status codes 4xx and 5xx",
                "required": [
                    "error_code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "error_code": {
                        "description": "Code that identifies the error",
                        "type": "string"
                    },
                    "message": {
                        "description": "Short text that gives datails about the error",
                        "type": "string"
                    },
                    "details": {
                        "description": "List of specific and detailed information about the error",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorMessageDetails"
                        }
                    }
                },
                "example": {
                    "error_code": "UNPROCESSABLE_ENTITY",
                    "message": "The request is semantically incorrect or fails business validation",
                    "details": [
                        {
                            "issue": "INVALID_STRING_MAX_LENGTH",
                            "description": "Field value exceeded the maximum allowed number of 5 characters",
                            "location": "body",
                            "field": "status",
                            "value": "400000"
                        }
                    ]
                }
            },
            "ErrorMessageDetails": {
                "title": "Root Type for ErrorMessageDetails",
                "description": "Detailed information about an error",
                "required": [
                    "description",
                    "location",
                    "issue"
                ],
                "type": "object",
                "properties": {
                    "issue": {
                        "description": "Unique code that identifies the issue",
                        "type": "string"
                    },
                    "description": {
                        "description": "Short text that describes the error",
                        "type": "string"
                    },
                    "location": {
                        "description": "Part of the request where is the field related to the issue. Posible values are:\n- path_parameter\n- query_parameter\n- header\n- body",
                        "type": "string"
                    },
                    "field": {
                        "description": "Request field  related to the issue",
                        "type": "string"
                    },
                    "value": {
                        "description": "Current value of the field related to the issue",
                        "type": "string"
                    }
                },
                "example": {
                    "issue": "INVALID_STRING_MAX_LENGTH",
                    "description": "Field value exceeded the maximum allowed number of 5 characters",
                    "location": "body",
                    "field": "status",
                    "value": "400000"
                }
            },
            "BalanceRequest": {
                "title": "Root Type for BalanceRequest",
                "description": "Represents a Balance in request body",
                "required": [
                    "period_id",
                    "category_id",
                    "actual_amount",
                    "limit_amount"
                ],
                "type": "object",
                "properties": {
                    "period_id": {
                        "description": "Period unique identifier",
                        "type": "string"
                    },
                    "category_id": {
                        "description": "Category unique identifier - Group of movements for the same purpose",
                        "type": "string"
                    },
                    "actual_amount": {
                        "description": "Current balance amount",
                        "type": "number"
                    },
                    "limit_amount": {
                        "description": "Predefined limit of the balance amount",
                        "type": "number"
                    }
                },
                "example": {
                    "period_id": "f81b0091-1c8c-4fbe-b76b-99ca4392950a",
                    "category_id": "6c92f45a-18f4-43ab-9d97-967be5634ac0",
                    "actual_amount": 150.35,
                    "limit_amount": 300
                }
            },
            "BalanceResponse": {
                "description": "Represents a Balance in the response body",
                "required": [
                    "ENTIDADE_RESPONSE_PROPERTIES",
                    "campo2",
                    "actual_amount",
                    "category_id",
                    "id",
                    "limit_amount",
                    "period_id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "Balance identifier code",
                        "type": "string"
                    },
                    "period_id": {
                        "description": "Period unique identifier",
                        "type": "string"
                    },
                    "category_id": {
                        "description": "Category unique identifier - Group of movements for the same purpose",
                        "type": "string"
                    },
                    "actual_amount": {
                        "description": "Current balance amount",
                        "type": "number"
                    },
                    "limit_amount": {
                        "description": "Predefined limit of the balance amount",
                        "type": "number"
                    },
                    "created_at": {
                        "format": "date-time",
                        "description": "Balance creation date/time",
                        "type": "string"
                    },
                    "updated_at": {
                        "format": "date-time",
                        "description": "Balance update date/time",
                        "type": "string"
                    }
                },
                "example": {
                    "id": "89c5cb19-14d9-490c-99b4-6b001ccb5f4b",
                    "period_id": "f81b0091-1c8c-4fbe-b76b-99ca4392950a",
                    "category_id": "6c92f45a-18f4-43ab-9d97-967be5634ac0",
                    "actual_amount": 150.35,
                    "limit_amount": 300,
                    "created_at": "2023-01-04T20:06:15Z",
                    "updated_at": "2023-01-06T07:26:07Z"
                }
            },
            "BalanceResponseList": {
                "description": "Represents a list of Balance in the response body",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/BalanceResponse"
                },
                "example": [
                    {
                        "id": "89c5cb19-14d9-490c-99b4-6b001ccb5f4b",
                        "period_id": "f81b0091-1c8c-4fbe-b76b-99ca4392950a",
                        "category_id": "6c92f45a-18f4-43ab-9d97-967be5634ac0",
                        "actual_amount": 150.35,
                        "limit_amount": 300
                    },
                    {
                        "id": "b129fb82-7ea9-498d-82b4-248ebcc75a19",
                        "period_id": "1a294f80-e3c8-4609-a36a-4b1f5e204a30",
                        "category_id": "c2fe0271-afce-4e7c-8ec2-d4b59a767a4e",
                        "actual_amount": 83.27,
                        "limit_amount": 200
                    },
                    {
                        "id": "342e8fb2-86e7-4adc-85f3-67f349eae836",
                        "period_id": "9d5628c9-42df-448c-9ddf-f704e80184cf",
                        "category_id": "f55a9d78-6961-4638-86c7-594cb8fb89dc",
                        "actual_amount": 377.19,
                        "limit_amount": 450
                    }
                ]
            },
            "BalanceRequestPatch": {
                "title": "Root Type for BalanceRequest",
                "description": "Represents a Balance in the request body",
                "required": [
                    "actual_amount"
                ],
                "type": "object",
                "properties": {
                    "actual_amount": {
                        "description": "Current balance amount",
                        "type": "number"
                    }
                },
                "example": {
                    "actual_amount": 150.35
                }
            }
        },
        "responses": {
            "Response-200-Ok-Balance": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BalanceResponse"
                        },
                        "examples": {
                            "Response-200-Ok-Balance-Example": {
                                "value": {
                                    "id": "89c5cb19-14d9-490c-99b4-6b001ccb5f4b",
                                    "period_id": "f81b0091-1c8c-4fbe-b76b-99ca4392950a",
                                    "category_id": "6c92f45a-18f4-43ab-9d97-967be5634ac0",
                                    "actual_amount": 150.35,
                                    "limit_amount": 300,
                                    "created_at": "2023-01-04T20:06:15Z",
                                    "updated_at": "2023-01-06T07:26:07Z"
                                }
                            }
                        }
                    }
                },
                "description": "Success message (200 - OK) for a balance item returned"
            },
            "Response-200-Ok-Balance-List": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BalanceResponseList"
                        },
                        "examples": {
                            "Response-200-Ok-Balance-List-Example": {
                                "value": [
                                    {
                                        "id": "89c5cb19-14d9-490c-99b4-6b001ccb5f4b",
                                        "period_id": "f81b0091-1c8c-4fbe-b76b-99ca4392950a",
                                        "category_id": "6c92f45a-18f4-43ab-9d97-967be5634ac0",
                                        "actual_amount": 150.35,
                                        "limit_amount": 300
                                    },
                                    {
                                        "id": "b129fb82-7ea9-498d-82b4-248ebcc75a19",
                                        "period_id": "1a294f80-e3c8-4609-a36a-4b1f5e204a30",
                                        "category_id": "c2fe0271-afce-4e7c-8ec2-d4b59a767a4e",
                                        "actual_amount": 83.27,
                                        "limit_amount": 200
                                    },
                                    {
                                        "id": "342e8fb2-86e7-4adc-85f3-67f349eae836",
                                        "period_id": "9d5628c9-42df-448c-9ddf-f704e80184cf",
                                        "category_id": "f55a9d78-6961-4638-86c7-594cb8fb89dc",
                                        "actual_amount": 377.19,
                                        "limit_amount": 450
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Success message (200 - OK) for a list of balances"
            },
            "Response-201-Created": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BalanceResponse"
                        },
                        "examples": {
                            "Response-201-Created-Example": {
                                "value": {
                                    "id": "89c5cb19-14d9-490c-99b4-6b001ccb5f4b",
                                    "period_id": "f81b0091-1c8c-4fbe-b76b-99ca4392950a",
                                    "category_id": "6c92f45a-18f4-43ab-9d97-967be5634ac0",
                                    "actual_amount": 150.35,
                                    "limit_amount": 300,
                                    "created_at": "2023-01-04T20:06:15Z"
                                }
                            }
                        }
                    }
                },
                "description": "Success message (201 - Created)"
            },
            "Response-400-BadRequest": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-400-BadRequest-Example": {
                                "value": [
                                    {
                                        "error_code": "INVALID_REQUEST_SYNTAX",
                                        "message": "Request is not well-formed, syntactically incorrect, or violates schema",
                                        "details": [
                                            {
                                                "issue": "DECIMALS_NOT_SUPPORTED",
                                                "description": "Field value does not support decimals",
                                                "location": "body",
                                                "field": "customer.age",
                                                "value": "30.6"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (400 - Bad Request)"
            },
            "Response-401-Unauthorized": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-401-Unauthorized-Example": {
                                "value": [
                                    {
                                        "error_code": "INVALID_CLIENT",
                                        "message": "Client authentication failed",
                                        "details": [
                                            {
                                                "issue": "AUTHENTICATION_FAILURE",
                                                "description": "Authentication failed due to missing authorization header, or invalid authentication credentials",
                                                "location": "header",
                                                "field": "Authorization",
                                                "value": "abc"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (401 - Unauthorized)"
            },
            "Response-403-Forbidden": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-403-Forbidden-Example": {
                                "value": [
                                    {
                                        "error_code": "NOT_AUTHORIZED",
                                        "message": "Authorization failed due to insufficient permissions",
                                        "details": [
                                            {
                                                "issue": "PERMISSION_DENIED",
                                                "description": "You do not have permission to access or perform operations on this resource"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (403 - Forbidden)"
            },
            "Response-404-NotFound": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-404-NotFound-Example": {
                                "value": [
                                    {
                                        "error_code": "RESOURCE_NOT_FOUND",
                                        "message": "The specified resource does not found",
                                        "details": [
                                            {
                                                "issue": "NO_RECORDS_FOUND",
                                                "description": "Records not found. Please check the input parameters and try again",
                                                "location": "query_parameter",
                                                "field": "customer.cpf",
                                                "value": "123"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (404 - Not Found)"
            },
            "Response-405-MethodNotAllowed": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-405-MethodNotAllowed-Example": {
                                "value": [
                                    {
                                        "error_code": "METHOD_NOT_ALLOWED",
                                        "message": "Invalid path and HTTP method combination",
                                        "details": [
                                            {
                                                "issue": "METHOD_NOT_SUPPORTED",
                                                "description": "The server does not implement the requested path and HTTP method"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (405 - Method Not Allowed)"
            },
            "Response-415-UnsupportedMediaType": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-415-UnsupportedMediaType-Example": {
                                "value": [
                                    {
                                        "error_code": "UNSUPPORTED_MEDIA_TYPE",
                                        "message": "The server does not support the request body media type",
                                        "details": [
                                            {
                                                "issue": "INVALID_CONTENT_TYPE",
                                                "description": "The specified Content Type header is invalid",
                                                "location": "header",
                                                "field": "Content-Type"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (415 - Unsupported Media Type)"
            },
            "Response-422-UnprocessableEntity": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-422-UnprocessableEntity-Example": {
                                "value": [
                                    {
                                        "error_code": "UNPROCESSABLE_ENTITY",
                                        "message": "The request is semantically incorrect or fails business validation",
                                        "details": [
                                            {
                                                "issue": "INVALID_PARAMETER_FORMAT",
                                                "description": "Field value does not conform to the expected format: 99999-99",
                                                "location": "body",
                                                "field": "zipcode",
                                                "value": "14400-1234"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (422 - Unprocessable Entity)"
            },
            "Response-500-InternalServerError": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-500-InternalServerError-Example": {
                                "value": [
                                    {
                                        "error_code": "INTERNAL_SERVER_ERROR",
                                        "message": "A system or application error occurred"
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (500 - Internal Server Error)"
            },
            "Response-502-BadGateway": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-502-BadGateway-Example": {
                                "value": [
                                    {
                                        "error_code": "BAD_GATEWAY",
                                        "message": "The server returned an invalid response"
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (502 - Bad Gateway)"
            },
            "Response-503-ServiceUnavailable": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-503-ServiceUnavailable-Example": {
                                "value": [
                                    {
                                        "error_code": "SERVICE_UNAVAILABLE",
                                        "message": "The server cannot handle the request for a service due to temporary maintenance"
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (503 - Service Unavailable)"
            },
            "Response-504-GatewayTimeout": {
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/components/schemas/ErrorMessage"
                            }
                        },
                        "examples": {
                            "Response-504-GatewayTimeout-Example": {
                                "value": [
                                    {
                                        "error_code": "GATEWAY_TIMEOUT",
                                        "message": "The server did not send the response in the expected time"
                                    }
                                ]
                            }
                        }
                    }
                },
                "description": "Error message (504 - Gateway Timeout)"
            }
        }
    }
}